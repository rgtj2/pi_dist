{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/shared/malarium-mqtt/malarium-mqtt.component.css","webpack:///./src/app/shared/mqtt-message/mqtt-message.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/shared/malarium-mqtt/malarium-mqtt.component.html","webpack:///./src/app/shared/mqtt-message/mqtt-message.component.html","webpack:///./src/app/injection-tokens.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/app/services/websocket.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/malarium-mqtt/malarium-mqtt.component.ts","webpack:///./src/app/shared/mqtt-message/mqtt-message.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 139\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".grid {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: row;\\n            flex-direction: row;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n}\\n\\n.channel-section {\\n    margin-top: 1rem;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/malarium-mqtt/malarium-mqtt.component.css\n// module id = 140\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".message {\\n    color: white;\\n    padding: .25rem .5rem;\\n    margin: .5rem;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/mqtt-message/mqtt-message.component.css\n// module id = 141\n// module chunks = 1","module.exports = \"<app-malarium-mqtt></app-malarium-mqtt>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 142\n// module chunks = 1","module.exports = \"<form (ngSubmit)=\\\"publish()\\\">\\n    <select [formControl]=\\\"channelControl\\\">\\n        <option *ngFor=\\\"let channel of channels\\\" [ngValue]=\\\"channel\\\">{{channel}}</option>\\n    </select>\\n    <select [formControl]=\\\"colorControl\\\">\\n        <option *ngFor=\\\"let color of colors\\\" [ngValue]=\\\"color\\\">{{color}}</option>\\n    </select>\\n    <input [formControl]=\\\"messageControl\\\" type=\\\"text\\\" />\\n</form>\\n\\n\\n<div *ngIf=\\\"errors.length\\\">Error</div>\\n\\n<div *ngFor=\\\"let error of errors\\\">\\n    {{error | json}}\\n    <div *ngIf=\\\"error.type==='websocketConnection'\\\">\\n        Can't connect. <a (click)=\\\"reconnect()\\\">Retry</a>\\n    </div>\\n</div>\\n<div>\\n    <div class=\\\"channel-section\\\" *ngFor=\\\"let name of channelNames\\\">\\n        <div>{{name}}</div>\\n        <div class=\\\"grid channel-messages\\\">\\n            <div *ngFor=\\\"let message of channelHash[name]\\\">\\n                <app-mqtt-message [message]=\\\"message\\\"></app-mqtt-message>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/malarium-mqtt/malarium-mqtt.component.html\n// module id = 143\n// module chunks = 1","module.exports = \"<div class=\\\"message\\\" [ngStyle]=\\\"{'background-color': message.color}\\\">\\n    <div>{{message.value}}</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/mqtt-message/mqtt-message.component.html\n// module id = 144\n// module chunks = 1","import { InjectionToken } from '@angular/core';\n\n// TODO: Use environment variables\nexport const WEBSOCKET_HOST = new InjectionToken<string>('WEBSOCKET_HOST');\nexport const WEBSOCKET_PORT = new InjectionToken<number>('WEBSOCKET_PORT');\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/injection-tokens.ts","import { WEBSOCKET_HOST, WEBSOCKET_PORT } from './../injection-tokens';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebsocketService } from 'app/services/websocket.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    WebsocketService,\n    {provide: WEBSOCKET_HOST, useValue: 'localhost'},\n    {provide: WEBSOCKET_PORT, useValue: 9000}\n  ]\n})\nexport class ServicesModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services.module.ts","import { Observable } from 'rxjs/Observable';\nimport { WEBSOCKET_PORT, WEBSOCKET_HOST } from './../injection-tokens';\nimport { Injectable, Inject } from '@angular/core';\n\n@Injectable()\nexport class WebsocketService {\n  public websocket: WebSocket;\n\n  constructor(\n    @Inject(WEBSOCKET_HOST) private host,\n    @Inject(WEBSOCKET_PORT) private port\n  ) { }\n\n  create(): WebSocket {\n    return new WebSocket(`ws://${this.host}:${this.port}`);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/websocket.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 73;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 73\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { ServicesModule } from './services/services.module';\nimport { WEBSOCKET_HOST } from './injection-tokens';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { SharedModule } from 'app/shared/shared.module';\n\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ServicesModule,\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  declarations: [\n    AppComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { TChannel } from './../../typings.d';\nimport { WEBSOCKET_HOST } from '../../injection-tokens';\nimport { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { FormControl } from '@angular/forms';\nimport { WebsocketService } from '../../services/websocket.service';\nimport { IMQTTMessage } from '../../../app/typings';\n\ninterface IChannelHash {[displayName: string]: IMQTTMessage[]; };\n\n@Component({\n  selector: 'app-malarium-mqtt',\n  templateUrl: './malarium-mqtt.component.html',\n  styleUrls: ['./malarium-mqtt.component.css']\n})\nexport class MalariumMqttComponent implements OnInit, OnDestroy {\n  private websocket: WebSocket;\n  public channelHash: IChannelHash;\n  public channelNames: string[];\n  public stream: IMQTTMessage[];\n  public channels: TChannel[];\n  public colors: string[];\n  public errors: {type: string}[];\n  public messageControl: FormControl;\n  public colorControl: FormControl;\n  public channelControl: FormControl;\n\n  public channelDisplayNames = {\n    'test/stuff': 'Stuff',\n    'test/things': 'Things',\n    'test/hey': 'Automated',\n    'general/welcome': 'General',\n    'actions/movement': 'Sensors',\n    'actionrequest/led1': 'Action Requests',\n    'publishedaction/led1': 'Published Actions'\n  };\n\n  ngOnDestroy(): void {\n    this.websocket.close();\n  }\n  @HostListener('window:beforeunload')\n  disconnectFromWebsocket() {\n    this.websocket.close();\n  }\n  constructor(private websocketService: WebsocketService) { }\n\n  ngOnInit() {\n    this.setInitialState();\n  }\n\n  setInitialState(): void {\n    this.stream = [];\n    this.errors = [];\n    this.colors = ['#70af60', '#3f3f3f'];\n    this.channels = ['test/stuff', 'test/things', 'actionrequest/led1'];\n    this.messageControl = new FormControl(null);\n    this.colorControl = new FormControl(this.colors[0]);\n    this.channelControl = new FormControl('test/stuff');\n    this.initializeWebsocket();\n  }\n\n  reconnect(): void {\n    this.websocket.close();\n    this.errors = [];\n    this.initializeWebsocket();\n  }\n\n  initializeWebsocket() {\n    this.websocket = this.websocketService.create();\n    this.websocket.onerror = () => {\n      this.errors.push({type: 'websocketConnection'});\n    };\n    this.websocket.onmessage = (m) => {\n      this.stream.push(JSON.parse(m.data));\n      this.channelHash = null;\n      const channelHash = this.buildChannelHash();\n      this.channelNames = Object.keys(channelHash);\n      this.channelHash = channelHash;\n    };\n  }\n\n  publish(): void {\n    if (this.messageControl.value) {\n      this.websocket.send(this.serializeModel);\n    }\n  }\n\n  get serializeModel(): string {\n    const model = {channel: this.channelControl.value, color: this.colorControl.value, value: this.messageControl.value};\n    return JSON.stringify(model);\n  }\n\n  buildChannelHash(): IChannelHash {\n    const hash: IChannelHash = {};\n    this.stream.forEach((s) => {\n      const key = this.channelDisplayNames[s.channel];\n      if (!hash[key]) { hash[key] = []; }\n      hash[key].push(s);\n    });\n    return hash;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/malarium-mqtt/malarium-mqtt.component.ts","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mqtt-message',\n  templateUrl: './mqtt-message.component.html',\n  styleUrls: ['./mqtt-message.component.css']\n})\nexport class MqttMessageComponent implements OnInit {\n  @Input() public message: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/mqtt-message/mqtt-message.component.ts","import { MalariumMqttComponent } from './malarium-mqtt/malarium-mqtt.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MqttMessageComponent } from 'app/shared/mqtt-message/mqtt-message.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ServicesModule } from 'app/services/services.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ServicesModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    MqttMessageComponent,\n    MalariumMqttComponent\n  ],\n  exports: [\n    MqttMessageComponent,\n    MalariumMqttComponent\n  ]\n})\nexport class SharedModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}